language: objective-c
osx_image: xcode11.3
branches:
  only:
    - master
    - develop
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
cache:
  directories:
    - $HOME/Library/Caches/org.carthage.CarthageKit/dependencies
    - Carthage
    - vendor/bundle

before_install:
  - bundle install --path vendor/bundle
  - gem install xcpretty
  - brew update
  - brew outdated carthage || brew upgrade carthage

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - LANG=en_US.UTF-8
    - WORKSPACE=Restofire.xcworkspace
    - IOS_FRAMEWORK_SCHEME="Restofire-iOS"
    - OSX_FRAMEWORK_SCHEME="Restofire-macOS"
    - TVOS_FRAMEWORK_SCHEME="Restofire-tvOS"
    - WATCHOS_FRAMEWORK_SCHEME="Restofire-watchOS"
  matrix:
    - DESTINATION="OS=13.2,name=iPhone 11 Pro"              SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=12.2,name=iPhone XS"                  SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=11.4,name=iPhone X"                   SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=10.3.1,name=iPhone 7 Plus"            SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=9.3,name=iPhone 6"                    SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=8.4,name=iPhone 4S"                   SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="arch=x86_64"                             SCHEME="$MACOS_FRAMEWORK_SCHEME"   RUN_TESTS="YES"
    - DESTINATION="OS=13.2,name=Apple TV 4K (at 1080p)"     SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=12.2,name=Apple TV 4K"                SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=11.4,name=Apple TV 4K"                SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=10.2,name=Apple TV 1080p"             SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=9.2,name=Apple TV 1080p"              SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=6.1,name=Apple Watch Series 5 - 44mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"
    - DESTINATION="OS=5.2,name=Apple Watch Series 4 - 44mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"
    - DESTINATION="OS=4.2,name=Apple Watch Series 3 - 42mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"
    - DESTINATION="OS=3.2,name=Apple Watch Series 2 - 42mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"
    - DESTINATION="OS=2.2,name=Apple Watch - 42mm"          SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"

before_script:
  - sh scripts/bootstrap

script:
  - set -o pipefail
  - xcodebuild -version
  - xcodebuild -showsdks

  # Build Framework in Debug and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
    xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty -c;
    else
    xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi

  # Build Framework in Release and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
    xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty -c;
    else
    xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi

jobs:
  include:
    - stage: Danger
      script: bundle exec danger
    - stage: Pod lib lint
      script: bundle exec pod lib lint --verbose --allow-warnings
    - stage: Deploy Github
      script: skip
      before_deploy:
        - carthage build --no-skip-current --cache-builds
        - carthage archive Restofire
        - carthage archive Alamofire
      deploy:
        - provider: releases
          api_key:
            secure: c0JMDdJasn6PlRHBg/IU8+W1zRc5SghpufkKghF3jgka2f2+LBUT9LiUNOREW6HBK1lEvlUP6jQ8EbQgcucXs+3xU0U7ze1icuLW9y/7oQOFYk2+0Nw10vYbSj8aRe3AQKP5FonRDit8m++HB6BaerYce332Zp5ED4MG2pqjpMYRhINFrN8lcMjLyMPl7VSeYfkuCMXKDSX2OqEs8cNZ3n38TomxKgLXPlncvk+NXAyx7QGZ20UFUxHRPnMc5rxVALkRMRKClt3TVK+hrv8AG93dZKy+bALzvMgm+MOjO3ua1hOzT6NNOHvBKlZWKSbxa5Imwxv6fzehQGaMBFFYRhkI88mnQuVJRzU5cIPFt/yg2/bRr362/TmeWeWgQF3b8GgfW+WTh66Ud99Ahl67cdOt6+BjOOJuFVsOKNY1ahslDy6+XdGgCNHgRuuKhqHGcW5syO2+Sh7Sb9ehUaDvxVe3aQR0B2Mpn4ZQE3sQpFYHMQlkJYvuSysqYkCMrSAbYMEXEWF14LLh7LbNO9IhO9dQFhfVClUzhv1FADzc3vjjR+gt4bNZzjlMadzEYXxdhT71WccjsDU0cq9Kqky5sygmEDjEjKd2+Ea8Yud3FCX+DG3QahOhTEXn70WDJHThDZpefSHxYxL5Jvx3cNgZ25wJOihzzREJJNZGTN0KVyc=
          file:
            - Restofire.framework.zip
            - Alamofire.framework.zip
          skip_cleanup: true
          overwrite: true
          on:
            repo: Restofire/Restofire
            tags: true
    - stage: Deploy Cocoapods
      script: skip
      deploy:
        - provider: script
          script: bundle exec pod trunk push
          skip_cleanup: true
          on:
            tags: true
